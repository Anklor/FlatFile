{"name":"FlatFile","tagline":"Quick and clear library for work with flat files (faster then FileHelpers up-to 100 times)","body":"FlatFile \r\n========\r\n[![Build status](https://ci.appveyor.com/api/projects/status/9uoix14g3w0rac3q?svg=true)](https://ci.appveyor.com/project/forcewake/flatfile)\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/forcewake/flatfile/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\nFlatFile is a library to work with flat files (work up-to 100 times faster then [FileHelpers](https://www.nuget.org/packages/FileHelpers/2.0.0))\r\n\r\n### Installing FlatFile\r\n\r\n#### Installing all packages\r\nYou should install [FlatFile with NuGet](https://www.nuget.org/packages/FlatFile):\r\n\r\n```sh\r\nInstall-Package FlatFile\r\n```\r\n\r\n#### Installing FlatFile.Delimited\r\nYou should install [FlatFile.Delimited with NuGet](https://www.nuget.org/packages/FlatFile.Delimited):\r\n\r\n```sh\r\nInstall-Package FlatFile.Delimited\r\n```\r\n\r\n##### Add attribute-mapping extensions\r\nYou should install [FlatFile.Delimited.Attributes with NuGet](https://www.nuget.org/packages/FlatFile.Delimited.Attributes):\r\n\r\n```sh\r\nInstall-Package FlatFile.Delimited.Attributes\r\n```\r\n\r\n#### Installing FlatFile.FixedLength\r\nYou should install [FlatFile.FixedLength with NuGet](https://www.nuget.org/packages/FlatFile.FixedLength):\r\n\r\n```sh\r\nInstall-Package FlatFile.FixedLength\r\n```\r\n\r\n##### Add attribute-mapping extensions\r\nYou should install [FlatFile.FixedLength.Attributes with NuGet](https://www.nuget.org/packages/FlatFile.FixedLength.Attributes):\r\n\r\n```sh\r\nInstall-Package FlatFile.FixedLength.Attributes\r\n```\r\n\r\nThis commands from Package Manager Console will download and install FlatFile and all required dependencies.\r\n\r\n### Benchmarks\r\n#### Simple write\r\n\r\n```\r\nName                                    Milliseconds        Percent                       \r\nFileHelperEngine.WriteStream            5175                11266.8%                      \r\nFlatFileEngine.Write                    45                  100%                          \r\n```\r\n\r\n#### Simple read\r\n```\r\nName                                    Milliseconds        Percent                       \r\nFileHelperEngine.ReadStream             7636                2764.4%                       \r\nFlatFileEngine.Read                     276                 100%                          \r\n```\r\n\r\n#### Big (100000 entities) write\r\n```\r\nName                                    Milliseconds        Percent                       \r\nFileHelperEngine.WriteStream            17246               838.4%                        \r\nFlatFileEngine.Write                    2057                100%                          \r\n```\r\n\r\n#### Big (100000 entities) write with reflection magic\r\n```\r\nName                                    Milliseconds        Percent                       \r\nFileHelperEngine.WriteStream            17778               1052.5%                       \r\nFlatFileEngine.Write                    1689                100%                          \r\n```\r\n\r\n### Usage\r\n#### Class mapping \r\n##### DelimitedLayout\r\n```cs\r\npublic class DelimitedSampleRecordLayout : DelimitedLayout<FixedSampleRecord>\r\n{\r\n    protected override void MapLayout()\r\n    {\r\n        this.WithDelimiter(\";\")\r\n            .WithQuote(\"\\\"\")\r\n            .WithMember(x => x.Cuit)\r\n            .WithMember(x => x.Nombre)\r\n            .WithMember(x => x.Actividad, c => c.WithName(\"AnotherName\"));\r\n    }\r\n}\r\n```\r\n##### FixedLayout\r\n```cs\r\npublic class FixedSampleRecordLayout : FixedLayout<FixedSampleRecord>\r\n{\r\n    protected override void MapLayout()\r\n    {\r\n        this.WithMember(x => x.Cuit, c => c.WithLenght(11))\r\n            .WithMember(x => x.Nombre, c => c.WithLenght(160))\r\n            .WithMember(x => x.Actividad, c => c.WithLenght(6));\r\n    }\r\n}\r\n```\r\n\r\n#### Run-time mapping\r\n##### DelimitedLayout\r\n```cs\r\npublic class LayoutFactory\r\n{\r\n    public IDelimitedLayout<TestObject> GetLayout()\r\n    {\r\n        IDelimitedLayout<TestObject> layout = new DelimitedLayout<TestObject>()\r\n            .WithDelimiter(\";\")\r\n            .WithQuote(\"\\\"\")\r\n            .WithMember(o => o.Id)\r\n            .WithMember(o => o.Description)\r\n            .WithMember(o => o.NullableInt, set => set.AllowNull(\"=Null\"));\r\n\r\n        return layout;\r\n    } \r\n}\r\n```\r\n##### FixedLayout\r\n```cs\r\npublic class LayoutFactory\r\n{\r\n    public IFixedLayout<TestObject> GetLayout()\r\n    {\r\n        IFixedLayout<TestObject> layout = new FixedLayout<TestObject>()\r\n            .WithMember(o => o.Id, set => set\r\n                .WithLenght(5)\r\n                .WithLeftPadding('0'))\r\n            .WithMember(o => o.Description, set => set\r\n                .WithLenght(25)\r\n                .WithRightPadding(' '))\r\n            .WithMember(o => o.NullableInt, set => set\r\n                .WithLenght(5)\r\n                .AllowNull(\"=Null\")\r\n                .WithLeftPadding('0'));\r\n\r\n        return layout;\r\n    }\r\n```\r\n\r\n#### Attribute mapping\r\n##### Delimited\r\n```cs\r\nusing FlatFile.Delimited.Attributes;\r\n\r\n[DelimitedFile(Delimiter = \";\", Quotes = \"\\\"\")]\r\npublic class TestObject\r\n{\r\n    [DelimitedField(1)]\r\n    public int Id { get; set; }\r\n\r\n    [DelimitedField(2)]\r\n    public string Description { get; set; }\r\n\r\n    [DelimitedField(3, NullValue = \"=Null\")]\r\n    public int? NullableInt { get; set; }\r\n}\r\n```\r\n\r\n##### Fixed\r\n```cs\r\nusing FlatFile.FixedLength;\r\nusing FlatFile.FixedLength.Attributes;\r\n\r\n[FixedLengthFile]\r\npublic class TestObject\r\n{\r\n    [FixedLengthField(1, 5, PaddingChar = '0')]\r\n    public int Id { get; set; }\r\n\r\n    [FixedLengthField(2, 25, PaddingChar = ' ', Padding = Padding.Right)]\r\n    public string Description { get; set; }\r\n\r\n    [FixedLengthField(2, 5, PaddingChar = '0', NullValue = \"=Null\")]\r\n    public int? NullableInt { get; set; }\r\n}\r\n```\r\n\r\n#### Read from stream\r\n##### With layout\r\n```cs\r\nvar layout = new FixedSampleRecordLayout();\r\nvar factory = new FixedLengthFileEngineFactory();\r\nusing (var stream = new MemoryStream(Encoding.UTF8.GetBytes(FixedFileSample)))\r\n{\r\n    var flatFile = factory.GetEngine<FixedSampleRecord>(layout);\r\n\r\n    var records = flatFile.Read(stream).ToArray();\r\n}\r\n```\r\n\r\n##### With attribute-mapping\r\n```cs\r\nvar factory = new FixedLengthFileEngineFactory();\r\nusing (var stream = new MemoryStream(Encoding.UTF8.GetBytes(FixedFileSample)))\r\n{\r\n    var flatFile = factory.GetEngine<FixedSampleRecord>();\r\n\r\n    var records = flatFile.Read(stream).ToArray();\r\n}\r\n```\r\n\r\n#### Write to stream\r\n##### With layout\r\n```cs\r\nvar sampleRecords = GetRecords();\r\nvar layout = new FixedSampleRecordLayout();\r\nvar factory = new FixedLengthFileEngineFactory();\r\nusing (var stream = new MemoryStream())\r\n{\r\n    var flatFile = factory.GetEngine<FixedSampleRecord>(layout);\r\n\r\n    flatFile.Write(stream, sampleRecords);\r\n}\r\n```\r\n\r\n##### With attribute-mapping\r\n```cs\r\nvar sampleRecords = GetRecords();\r\nvar factory = new FixedLengthFileEngineFactory();\r\nusing (var stream = new MemoryStream())\r\n{\r\n    var flatFile = factory.GetEngine<FixedSampleRecord>();\r\n\r\n    flatFile.Write(stream, sampleRecords);\r\n}\r\n```","google":"UA-58396828-1","note":"Don't delete this file! It's used internally to help with page regeneration."}